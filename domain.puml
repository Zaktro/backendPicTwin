@startuml
left to right direction

package cl.ucn.dsm.pictwin.backend.model {

    class Pic {
        - id : Long
        - timestamp : ZonedDateTime
        - dislike : Integer
        - latitude : Double
        - longitude : Double
        - error : Double
        - views : Integer
        - name : String
        - picture : byte[]
        + Pic(..)
        + getId() : Long
        + getTimestamp() : ZonedDateTime
        + getDislike() : Integer
        + incrementDislikes() : Integer
        + getLatitude() : Double
        + getLongitude() : Double
        + getError() : Double
        + getViews() : Integer
        + incrementViews() : Integer
        + getName() : String
        + getPicture() : byte[]
        + getOwner() : User
    }

    class Twin {
        - id : Long
        - dislike : boolean
        + Twin(..)
        + getId() : Long
        + getDislike() : boolean
        + setDislike() : void
        + getMy() : Pic
        + getYours() : Pic
    }
    Twin --> "1" Pic: -my: Pic
    Twin --> "1" Pic: -yours: Pic

    enum State{
        ACTIVE
        BANNED
    }

    class User {
        - id : Long
        - email : String
        - password : String
        - strikes : Integer
        + User(..)
        + getId() : Long
        + getEmail() : String
        + getPassword() : String
        + getStrikes() : Integer
        + incrementStrikes() : Integer
        + getState() : State
        + getTwin() : List<Twins>
    }
    User --> "1" State : -state: State
    User --> "*" Twin : -twins: List<Twins>
    User <-- Pic: -owner : User

}

package org.springframework.data.repository{

    interface CrudRepository<T, ID>{
    }

    interface CrudRepository<T, ID>{
    }
    ListCrudRepository --|> CrudRepository

}

package cl.ucn.dsm.pictwin.backend.jpa{

    interface PicRepository<Pic, Long>{
    }
    PicRepository --|> ListCrudRepository

    interface TwinRepository<Twin, Long>{
    }
    TwinRepository --|> ListCrudRepository

    interface UserRepository<User, Long>{
    }
    UserRepository --|> ListCrudRepository

    class DatabaseLoader{
        + DatabaseLoader(UserRepository, TwinRepository, PicRepository)
        + run(String..) : void
    }

}

package cl.ucn.dsm.pictwin.backend.services{

    interface PicTwin {
        + create(user: User, password: String): User
        + authenticate(email: String, password: String): User
        + createTwin(pic: Pic, idUser: Long): Twin
        + dislike(idTwin: Long, idUser: Long): void
        + getUserSize(): Long
    }
    PicTwin ..> User: <<use>>
    PicTwin ..> Pic: <<use>>
    PicTwin ..> Twin: <<use>>
    DatabaseLoader --> "1" PicTwin: -pictwin : PicTwin

    class PicTwinImpl{
        - {static} PASSWORD_ENCORED: password_encored
    }
    PicTwinImpl ..|> PicTwin
    PicTwinImpl --> "1" UserRepository: -userRepository
    PicTwinImpl --> "1" TwinRepository: -twinRepository
    PicTwinImpl --> "1" PicRepository: -picRepository

}

package cl.ucn.dsm.pictwin.backend.web{

    class PicTwinRestController{
        + PicTwinRestController(picTwin: PicTwin)
        + create(user: User, password: String): User
        + authenticate(email: String, password: String): User
        + createTwin(pic: Pic, idUser: Long): void
        + dislike(idTwin: Long, idUser: long): void
    }
    PicTwinRestController --> "1" PicTwin: -pictwin: PicTwin

    class BackendApplication{
        + {static} main(args[]: String): void
    }
    BackendApplication ..> PicTwinRestController: <<use>>
}

package cl.ucn.dsm.pictwin.backend{

    class Utils{
        + {static} printObject(objectName: String, o: Object): void
    }
    DatabaseLoader ..> Utils: <<use>>
}

@enduml